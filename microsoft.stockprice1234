{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4fed2fa3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4/1/2015 16:00:00</td>\n",
       "      <td>40.60</td>\n",
       "      <td>40.76</td>\n",
       "      <td>40.31</td>\n",
       "      <td>40.72</td>\n",
       "      <td>36865322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4/2/2015 16:00:00</td>\n",
       "      <td>40.66</td>\n",
       "      <td>40.74</td>\n",
       "      <td>40.12</td>\n",
       "      <td>40.29</td>\n",
       "      <td>37487476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4/6/2015 16:00:00</td>\n",
       "      <td>40.34</td>\n",
       "      <td>41.78</td>\n",
       "      <td>40.18</td>\n",
       "      <td>41.55</td>\n",
       "      <td>39223692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4/7/2015 16:00:00</td>\n",
       "      <td>41.61</td>\n",
       "      <td>41.91</td>\n",
       "      <td>41.31</td>\n",
       "      <td>41.53</td>\n",
       "      <td>28809375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4/8/2015 16:00:00</td>\n",
       "      <td>41.48</td>\n",
       "      <td>41.69</td>\n",
       "      <td>41.04</td>\n",
       "      <td>41.42</td>\n",
       "      <td>24753438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1506</th>\n",
       "      <td>3/25/2021 16:00:00</td>\n",
       "      <td>235.30</td>\n",
       "      <td>236.94</td>\n",
       "      <td>231.57</td>\n",
       "      <td>232.34</td>\n",
       "      <td>34061853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1507</th>\n",
       "      <td>3/26/2021 16:00:00</td>\n",
       "      <td>231.55</td>\n",
       "      <td>236.71</td>\n",
       "      <td>231.55</td>\n",
       "      <td>236.48</td>\n",
       "      <td>25479853</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1508</th>\n",
       "      <td>3/29/2021 16:00:00</td>\n",
       "      <td>236.59</td>\n",
       "      <td>236.80</td>\n",
       "      <td>231.88</td>\n",
       "      <td>235.24</td>\n",
       "      <td>25227455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1509</th>\n",
       "      <td>3/30/2021 16:00:00</td>\n",
       "      <td>233.53</td>\n",
       "      <td>233.85</td>\n",
       "      <td>231.10</td>\n",
       "      <td>231.85</td>\n",
       "      <td>24792012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1510</th>\n",
       "      <td>3/31/2021 16:00:00</td>\n",
       "      <td>232.91</td>\n",
       "      <td>239.10</td>\n",
       "      <td>232.39</td>\n",
       "      <td>235.77</td>\n",
       "      <td>43623471</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1511 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Date    Open    High     Low   Close    Volume\n",
       "0      4/1/2015 16:00:00   40.60   40.76   40.31   40.72  36865322\n",
       "1      4/2/2015 16:00:00   40.66   40.74   40.12   40.29  37487476\n",
       "2      4/6/2015 16:00:00   40.34   41.78   40.18   41.55  39223692\n",
       "3      4/7/2015 16:00:00   41.61   41.91   41.31   41.53  28809375\n",
       "4      4/8/2015 16:00:00   41.48   41.69   41.04   41.42  24753438\n",
       "...                  ...     ...     ...     ...     ...       ...\n",
       "1506  3/25/2021 16:00:00  235.30  236.94  231.57  232.34  34061853\n",
       "1507  3/26/2021 16:00:00  231.55  236.71  231.55  236.48  25479853\n",
       "1508  3/29/2021 16:00:00  236.59  236.80  231.88  235.24  25227455\n",
       "1509  3/30/2021 16:00:00  233.53  233.85  231.10  231.85  24792012\n",
       "1510  3/31/2021 16:00:00  232.91  239.10  232.39  235.77  43623471\n",
       "\n",
       "[1511 rows x 6 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "df=pd.read_csv(\"C:\\\\Users\\\\gpt-bantwal\\\\Downloads\\\\Microsoft_Stock.csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9a60b55f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4/1/2015 16:00:00</td>\n",
       "      <td>40.60</td>\n",
       "      <td>40.76</td>\n",
       "      <td>40.31</td>\n",
       "      <td>40.72</td>\n",
       "      <td>36865322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4/2/2015 16:00:00</td>\n",
       "      <td>40.66</td>\n",
       "      <td>40.74</td>\n",
       "      <td>40.12</td>\n",
       "      <td>40.29</td>\n",
       "      <td>37487476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4/6/2015 16:00:00</td>\n",
       "      <td>40.34</td>\n",
       "      <td>41.78</td>\n",
       "      <td>40.18</td>\n",
       "      <td>41.55</td>\n",
       "      <td>39223692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4/7/2015 16:00:00</td>\n",
       "      <td>41.61</td>\n",
       "      <td>41.91</td>\n",
       "      <td>41.31</td>\n",
       "      <td>41.53</td>\n",
       "      <td>28809375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4/8/2015 16:00:00</td>\n",
       "      <td>41.48</td>\n",
       "      <td>41.69</td>\n",
       "      <td>41.04</td>\n",
       "      <td>41.42</td>\n",
       "      <td>24753438</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Date   Open   High    Low  Close    Volume\n",
       "0  4/1/2015 16:00:00  40.60  40.76  40.31  40.72  36865322\n",
       "1  4/2/2015 16:00:00  40.66  40.74  40.12  40.29  37487476\n",
       "2  4/6/2015 16:00:00  40.34  41.78  40.18  41.55  39223692\n",
       "3  4/7/2015 16:00:00  41.61  41.91  41.31  41.53  28809375\n",
       "4  4/8/2015 16:00:00  41.48  41.69  41.04  41.42  24753438"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d47de44f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1511, 6)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "da7ee45a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date      0\n",
       "Open      0\n",
       "High      0\n",
       "Low       0\n",
       "Close     0\n",
       "Volume    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "82e20add",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Date      False\n",
       "Open      False\n",
       "High      False\n",
       "Low       False\n",
       "Close     False\n",
       "Volume    False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().any()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "59a4032e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1511 entries, 0 to 1510\n",
      "Data columns (total 6 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   Date    1511 non-null   object \n",
      " 1   Open    1511 non-null   float64\n",
      " 2   High    1511 non-null   float64\n",
      " 3   Low     1511 non-null   float64\n",
      " 4   Close   1511 non-null   float64\n",
      " 5   Volume  1511 non-null   int64  \n",
      "dtypes: float64(4), int64(1), object(1)\n",
      "memory usage: 71.0+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "85486af5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1511.000000</td>\n",
       "      <td>1511.000000</td>\n",
       "      <td>1511.000000</td>\n",
       "      <td>1511.000000</td>\n",
       "      <td>1.511000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>107.385976</td>\n",
       "      <td>108.437472</td>\n",
       "      <td>106.294533</td>\n",
       "      <td>107.422091</td>\n",
       "      <td>3.019863e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>56.691333</td>\n",
       "      <td>57.382276</td>\n",
       "      <td>55.977155</td>\n",
       "      <td>56.702299</td>\n",
       "      <td>1.425266e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>40.340000</td>\n",
       "      <td>40.740000</td>\n",
       "      <td>39.720000</td>\n",
       "      <td>40.290000</td>\n",
       "      <td>1.016120e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>57.860000</td>\n",
       "      <td>58.060000</td>\n",
       "      <td>57.420000</td>\n",
       "      <td>57.855000</td>\n",
       "      <td>2.136213e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>93.990000</td>\n",
       "      <td>95.100000</td>\n",
       "      <td>92.920000</td>\n",
       "      <td>93.860000</td>\n",
       "      <td>2.662962e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>139.440000</td>\n",
       "      <td>140.325000</td>\n",
       "      <td>137.825000</td>\n",
       "      <td>138.965000</td>\n",
       "      <td>3.431962e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>245.030000</td>\n",
       "      <td>246.130000</td>\n",
       "      <td>242.920000</td>\n",
       "      <td>244.990000</td>\n",
       "      <td>1.352271e+08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Open         High          Low        Close        Volume\n",
       "count  1511.000000  1511.000000  1511.000000  1511.000000  1.511000e+03\n",
       "mean    107.385976   108.437472   106.294533   107.422091  3.019863e+07\n",
       "std      56.691333    57.382276    55.977155    56.702299  1.425266e+07\n",
       "min      40.340000    40.740000    39.720000    40.290000  1.016120e+05\n",
       "25%      57.860000    58.060000    57.420000    57.855000  2.136213e+07\n",
       "50%      93.990000    95.100000    92.920000    93.860000  2.662962e+07\n",
       "75%     139.440000   140.325000   137.825000   138.965000  3.431962e+07\n",
       "max     245.030000   246.130000   242.920000   244.990000  1.352271e+08"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ab718a92",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "lenght of dataset: 1511\n"
     ]
    }
   ],
   "source": [
    "print('lenght of dataset:',len(df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "625fb6fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "df['Open'].plot(figsize=(16,6))\n",
    "plt.title('Linechart')\n",
    "plt.xlabel('Open')\n",
    "plt.ylabel('frequency')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8348d2d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=df\n",
    "x['year']=pd.DatetimeIndex(x['Date']).year\n",
    "x['month']=pd.DatetimeIndex(x['Date']).month\n",
    "x['day']=pd.DatetimeIndex(x['Date']).day"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3d67d97b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4/1/2015 16:00:00</td>\n",
       "      <td>40.60</td>\n",
       "      <td>40.76</td>\n",
       "      <td>40.31</td>\n",
       "      <td>40.72</td>\n",
       "      <td>36865322</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4/2/2015 16:00:00</td>\n",
       "      <td>40.66</td>\n",
       "      <td>40.74</td>\n",
       "      <td>40.12</td>\n",
       "      <td>40.29</td>\n",
       "      <td>37487476</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4/6/2015 16:00:00</td>\n",
       "      <td>40.34</td>\n",
       "      <td>41.78</td>\n",
       "      <td>40.18</td>\n",
       "      <td>41.55</td>\n",
       "      <td>39223692</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4/7/2015 16:00:00</td>\n",
       "      <td>41.61</td>\n",
       "      <td>41.91</td>\n",
       "      <td>41.31</td>\n",
       "      <td>41.53</td>\n",
       "      <td>28809375</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4/8/2015 16:00:00</td>\n",
       "      <td>41.48</td>\n",
       "      <td>41.69</td>\n",
       "      <td>41.04</td>\n",
       "      <td>41.42</td>\n",
       "      <td>24753438</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1506</th>\n",
       "      <td>3/25/2021 16:00:00</td>\n",
       "      <td>235.30</td>\n",
       "      <td>236.94</td>\n",
       "      <td>231.57</td>\n",
       "      <td>232.34</td>\n",
       "      <td>34061853</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1507</th>\n",
       "      <td>3/26/2021 16:00:00</td>\n",
       "      <td>231.55</td>\n",
       "      <td>236.71</td>\n",
       "      <td>231.55</td>\n",
       "      <td>236.48</td>\n",
       "      <td>25479853</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1508</th>\n",
       "      <td>3/29/2021 16:00:00</td>\n",
       "      <td>236.59</td>\n",
       "      <td>236.80</td>\n",
       "      <td>231.88</td>\n",
       "      <td>235.24</td>\n",
       "      <td>25227455</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1509</th>\n",
       "      <td>3/30/2021 16:00:00</td>\n",
       "      <td>233.53</td>\n",
       "      <td>233.85</td>\n",
       "      <td>231.10</td>\n",
       "      <td>231.85</td>\n",
       "      <td>24792012</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1510</th>\n",
       "      <td>3/31/2021 16:00:00</td>\n",
       "      <td>232.91</td>\n",
       "      <td>239.10</td>\n",
       "      <td>232.39</td>\n",
       "      <td>235.77</td>\n",
       "      <td>43623471</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1511 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Date    Open    High     Low   Close    Volume  year  \\\n",
       "0      4/1/2015 16:00:00   40.60   40.76   40.31   40.72  36865322  2015   \n",
       "1      4/2/2015 16:00:00   40.66   40.74   40.12   40.29  37487476  2015   \n",
       "2      4/6/2015 16:00:00   40.34   41.78   40.18   41.55  39223692  2015   \n",
       "3      4/7/2015 16:00:00   41.61   41.91   41.31   41.53  28809375  2015   \n",
       "4      4/8/2015 16:00:00   41.48   41.69   41.04   41.42  24753438  2015   \n",
       "...                  ...     ...     ...     ...     ...       ...   ...   \n",
       "1506  3/25/2021 16:00:00  235.30  236.94  231.57  232.34  34061853  2021   \n",
       "1507  3/26/2021 16:00:00  231.55  236.71  231.55  236.48  25479853  2021   \n",
       "1508  3/29/2021 16:00:00  236.59  236.80  231.88  235.24  25227455  2021   \n",
       "1509  3/30/2021 16:00:00  233.53  233.85  231.10  231.85  24792012  2021   \n",
       "1510  3/31/2021 16:00:00  232.91  239.10  232.39  235.77  43623471  2021   \n",
       "\n",
       "      month  day  \n",
       "0         4    1  \n",
       "1         4    2  \n",
       "2         4    6  \n",
       "3         4    7  \n",
       "4         4    8  \n",
       "...     ...  ...  \n",
       "1506      3   25  \n",
       "1507      3   26  \n",
       "1508      3   29  \n",
       "1509      3   30  \n",
       "1510      3   31  \n",
       "\n",
       "[1511 rows x 9 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "cecf7225",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Volume</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "      <th>day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40.60</td>\n",
       "      <td>40.76</td>\n",
       "      <td>40.31</td>\n",
       "      <td>36865322</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40.66</td>\n",
       "      <td>40.74</td>\n",
       "      <td>40.12</td>\n",
       "      <td>37487476</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>40.34</td>\n",
       "      <td>41.78</td>\n",
       "      <td>40.18</td>\n",
       "      <td>39223692</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>41.61</td>\n",
       "      <td>41.91</td>\n",
       "      <td>41.31</td>\n",
       "      <td>28809375</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>41.48</td>\n",
       "      <td>41.69</td>\n",
       "      <td>41.04</td>\n",
       "      <td>24753438</td>\n",
       "      <td>2015</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1506</th>\n",
       "      <td>235.30</td>\n",
       "      <td>236.94</td>\n",
       "      <td>231.57</td>\n",
       "      <td>34061853</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1507</th>\n",
       "      <td>231.55</td>\n",
       "      <td>236.71</td>\n",
       "      <td>231.55</td>\n",
       "      <td>25479853</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1508</th>\n",
       "      <td>236.59</td>\n",
       "      <td>236.80</td>\n",
       "      <td>231.88</td>\n",
       "      <td>25227455</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1509</th>\n",
       "      <td>233.53</td>\n",
       "      <td>233.85</td>\n",
       "      <td>231.10</td>\n",
       "      <td>24792012</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1510</th>\n",
       "      <td>232.91</td>\n",
       "      <td>239.10</td>\n",
       "      <td>232.39</td>\n",
       "      <td>43623471</td>\n",
       "      <td>2021</td>\n",
       "      <td>3</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1511 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Open    High     Low    Volume  year  month  day\n",
       "0      40.60   40.76   40.31  36865322  2015      4    1\n",
       "1      40.66   40.74   40.12  37487476  2015      4    2\n",
       "2      40.34   41.78   40.18  39223692  2015      4    6\n",
       "3      41.61   41.91   41.31  28809375  2015      4    7\n",
       "4      41.48   41.69   41.04  24753438  2015      4    8\n",
       "...      ...     ...     ...       ...   ...    ...  ...\n",
       "1506  235.30  236.94  231.57  34061853  2021      3   25\n",
       "1507  231.55  236.71  231.55  25479853  2021      3   26\n",
       "1508  236.59  236.80  231.88  25227455  2021      3   29\n",
       "1509  233.53  233.85  231.10  24792012  2021      3   30\n",
       "1510  232.91  239.10  232.39  43623471  2021      3   31\n",
       "\n",
       "[1511 rows x 7 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=df.drop(['Close','Date'],axis=1)\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9a905510",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        40.72\n",
       "1        40.29\n",
       "2        41.55\n",
       "3        41.53\n",
       "4        41.42\n",
       "         ...  \n",
       "1506    232.34\n",
       "1507    236.48\n",
       "1508    235.24\n",
       "1509    231.85\n",
       "1510    235.77\n",
       "Name: Close, Length: 1511, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y=df['Close']\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "43e7d889",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "xtrain shape :  (1012, 7)\n",
      "xtest shape :  (499, 7)\n",
      "ytrain shape :  (1012,)\n",
      "ytest shape :  (499,)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size =0.33,random_state = 0)\n",
    "print(\"xtrain shape : \", xtrain.shape)\n",
    "print(\"xtest shape : \", xtest.shape)\n",
    "print(\"ytrain shape : \", ytrain.shape)\n",
    "print(\"ytest shape : \", ytest.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f694bf38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "regressor = LinearRegression()\n",
    "regressor.fit(xtrain, ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "529af1e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[-5.88512666e-01  7.73764887e-01  8.13165397e-01 -3.22847349e-09\n",
      "  8.10945642e-02  7.34367787e-03 -2.78085087e-03]\n"
     ]
    }
   ],
   "source": [
    "print(regressor.coef_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3ffed0ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-163.24993698116356\n"
     ]
    }
   ],
   "source": [
    "print(regressor.intercept_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d39eb081",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 63.04610737,  45.6795737 ,  47.6911088 ,  97.99458872,\n",
       "        42.2254957 , 207.38120591, 107.35398079,  49.81182306,\n",
       "       116.38328279,  56.95775443,  43.62639076,  51.31404443,\n",
       "        63.43092597,  65.00925306, 101.59111965,  51.15205332,\n",
       "        65.39260725, 113.08312076,  50.25275375,  52.98193243,\n",
       "       139.10270941,  64.51504644, 202.5460272 ,  52.18501153,\n",
       "        64.38915619, 138.2571946 , 203.62019337,  73.91603224,\n",
       "       138.1104899 , 117.40809534,  68.17835032,  64.25596676,\n",
       "        63.4445509 ,  57.64808518, 206.81487332,  67.96487584,\n",
       "        57.99930043,  90.46934237, 113.79282262, 200.04170164,\n",
       "        49.9367403 ,  62.81749705, 242.53949721,  51.93619271,\n",
       "        85.88615428,  58.42711853, 216.782429  ,  46.59916769,\n",
       "        78.65032863, 100.71253714, 147.15915517, 173.75523482,\n",
       "        50.27946988,  84.40276409,  65.03280751,  69.19853713,\n",
       "       108.4026687 ,  95.01954644,  74.66755159, 106.49261394,\n",
       "       117.60730115, 203.89083753, 136.28320071, 125.4373009 ,\n",
       "        46.64567607, 211.04036606,  55.51916706,  62.28616134,\n",
       "       160.76348137, 106.22262427,  54.36508679,  72.58613312,\n",
       "        57.42494087,  85.35158604, 215.85460942,  64.75097216,\n",
       "        72.30213391,  48.65687739, 111.85002756,  54.28870648,\n",
       "        55.07122011,  57.84341832,  62.55608171,  57.47409898,\n",
       "       138.71924617, 196.88379757,  46.27629054, 173.09222451,\n",
       "        65.2126795 , 196.10032796,  62.27888917, 212.49066567,\n",
       "        55.00199563,  50.90402595, 183.82363059, 109.60137367,\n",
       "       139.39893499,  96.97013964,  47.32875415, 157.62552701,\n",
       "       164.81374992, 201.0658824 , 136.58715415,  65.81614948,\n",
       "        42.90371828, 100.59399167, 101.2766539 ,  51.98016014,\n",
       "        53.90851231, 137.52679512, 186.98842387,  48.21496727,\n",
       "        83.72383958, 198.87913836, 140.17994361,  52.33093022,\n",
       "        59.30495949, 182.85260956,  53.5237809 ,  63.50293112,\n",
       "        50.20408942, 122.67097815,  43.82590589,  51.21869611,\n",
       "        84.2934063 , 137.5290181 , 132.99040767,  98.19869413,\n",
       "        41.3018826 ,  56.36951278, 213.92742106, 193.92663345,\n",
       "       215.39901203,  45.99401401, 104.32897176,  63.99083318,\n",
       "       238.8527608 , 218.07456034, 102.32547289,  95.6333409 ,\n",
       "        73.85213175, 243.88075685, 131.91418105,  60.08388263,\n",
       "       211.83791799, 215.41909209,  89.01051946, 175.65148497,\n",
       "       198.212468  , 232.64171976, 120.27647704,  58.01402652,\n",
       "        59.48288272, 127.17623888, 215.50673693, 207.64499338,\n",
       "        65.0792439 , 106.63202369,  41.54792787,  52.61657073,\n",
       "        63.11150278,  48.59715048,  91.71493397, 106.9202131 ,\n",
       "       154.83402486,  73.6004481 ,  63.7343123 , 111.72324434,\n",
       "        63.32282268, 212.29303435, 204.69450242, 112.89565634,\n",
       "       212.73590223, 152.18979472,  51.86004899,  55.25607367,\n",
       "       104.45183714,  71.19934568,  47.68923137, 134.73190577,\n",
       "        82.26298144,  73.84021274, 144.25474144,  57.13409219,\n",
       "        63.00666757,  48.18075938,  51.93564948, 137.70152253,\n",
       "       219.02480984, 102.47957737,  93.3476545 ,  94.61426637,\n",
       "        41.3019485 , 202.90893153,  46.61828428,  64.41149655,\n",
       "        42.78641086, 111.77631195,  53.17994454,  51.81976867,\n",
       "        68.74785379, 107.30273637,  73.91518717,  69.18534059,\n",
       "       143.79678167,  61.27966918, 137.18637843,  45.36414244,\n",
       "       211.65212257,  55.36443794,  86.83638164,  48.87053538,\n",
       "       172.38807242,  47.19675496,  71.91780441,  54.44942765,\n",
       "        43.79868566, 137.67610765, 138.89855585, 110.92252438,\n",
       "       137.08044921,  65.54015958,  40.27684778, 112.3342188 ,\n",
       "        92.26047365,  64.23044051, 141.79001596, 140.87101459,\n",
       "        92.63606549, 102.95386484,  51.1185883 , 223.08583677,\n",
       "        53.74857699,  54.12483226, 217.40002523,  70.06207939,\n",
       "        69.319436  ,  84.2055166 ,  75.8948418 ,  70.04286131,\n",
       "        43.36081412, 208.44590874,  52.70795884, 205.02667827,\n",
       "       214.49134713,  75.78763287,  90.64360889, 212.00205751,\n",
       "        51.01486862,  54.78412666,  48.41889051, 213.25850549,\n",
       "        60.75010384,  46.12066427,  75.0391002 , 221.28846683,\n",
       "        46.03711821, 126.74379371,  68.97817515,  94.29829427,\n",
       "       155.03072622,  60.08916952,  52.86385825,  98.2562681 ,\n",
       "        49.63421457, 107.54293097,  92.18354879, 125.29207522,\n",
       "       139.74726267, 141.86936904, 162.3895818 ,  51.40645529,\n",
       "       106.06974789,  75.16431041,  73.09061581,  85.61228049,\n",
       "        77.84911207, 174.28332734,  85.97862018, 152.82977893,\n",
       "       208.50595309,  74.74452284, 213.16065228, 140.03579914,\n",
       "        65.19688458, 138.93092974,  54.97479624, 240.66699913,\n",
       "       216.22582414, 207.0297388 ,  57.43480107, 102.29712908,\n",
       "       214.97509793, 114.4819823 ,  97.77988756, 100.60366229,\n",
       "       108.87517762,  72.77542749, 138.92045609,  58.19037486,\n",
       "       109.98195985,  58.17751211,  45.67876823, 136.34997211,\n",
       "       243.1157559 ,  50.42683922,  68.9378659 ,  56.83628746,\n",
       "       102.19894682, 135.82972445,  61.20100819,  53.2567317 ,\n",
       "       120.10867328,  47.38368077,  76.29411175,  83.9529902 ,\n",
       "        47.78995403,  63.49770048, 241.77199441, 215.47003525,\n",
       "       244.19829635, 186.92122534,  68.59875137, 221.75161283,\n",
       "       185.15819268,  85.20323094,  89.87546021, 140.79853787,\n",
       "        45.96333844,  54.32651893, 103.51015126,  56.29599398,\n",
       "       107.22707623, 209.71699591, 235.4357399 ,  46.49311534,\n",
       "       170.31142259, 138.26675472,  68.01516452, 110.18360168,\n",
       "        93.50063181,  70.72358683, 161.6935835 , 110.01780938,\n",
       "       107.3032845 ,  47.75598498,  50.70875013, 112.70872125,\n",
       "       166.0918363 ,  43.01190865, 231.40039711,  84.08324017,\n",
       "       108.98120906,  43.51234929,  51.88283608, 127.02347771,\n",
       "       155.06110037,  83.73183211, 102.22635172, 233.05022327,\n",
       "       112.51489205,  64.85459375,  99.57938643, 162.97721028,\n",
       "       236.04714066,  65.60450035,  67.38781739, 177.07374773,\n",
       "       107.35500812,  65.07923911,  69.30332825, 105.27532289,\n",
       "        70.83911662,  44.57178762,  70.9725046 , 144.40527912,\n",
       "        46.35945737, 110.65962277,  84.37458754,  93.50099683,\n",
       "        46.77399681, 125.48722261,  46.82932859, 207.97794713,\n",
       "       184.89446504,  92.25375075, 162.01195011,  54.17208824,\n",
       "       114.68918312, 105.17807985, 212.44224037, 105.56242062,\n",
       "        62.8918317 ,  55.64542059,  53.89465802, 114.20585755,\n",
       "        48.24143596,  41.64620486, 217.73205048, 207.11719524,\n",
       "        79.09421195,  85.64054445,  65.14997572, 140.26559061,\n",
       "       109.53823835,  92.50396379,  77.57422671, 203.91317151,\n",
       "       210.2836492 , 136.34321224, 143.55757826,  85.79653418,\n",
       "        89.87907819, 111.61889041,  73.63836299,  52.87676072,\n",
       "       107.41501675, 117.35402721,  72.6522469 , 179.73569851,\n",
       "        97.45781949,  62.44263108, 205.9806813 , 210.45305811,\n",
       "       158.53478867,  63.0358295 ,  67.83694831, 110.49639137,\n",
       "       137.89124815,  59.56381365, 241.42672745,  71.99781939,\n",
       "       107.91199113, 129.8396571 ,  82.48306622, 212.18114043,\n",
       "        92.6532001 ,  85.85587954, 141.50222081, 110.23745018,\n",
       "       226.44943556, 157.35575572,  54.25735556, 184.78245994,\n",
       "       237.34537072, 107.13966354, 167.79607521, 151.34495676,\n",
       "        55.37249768,  59.28699187,  69.73063998,  54.43369424,\n",
       "        79.20947923, 107.14827649, 114.31893064, 213.05474169,\n",
       "        61.01023108, 165.19336283,  89.03539181, 210.15665966,\n",
       "       203.07015374,  68.67263548, 154.70140717, 104.18218758,\n",
       "       146.1760322 ,  68.9154985 ,  93.08546555,  69.44710835,\n",
       "        83.78054365,  94.49272981, 131.50753427, 101.99461839,\n",
       "       219.01555569,  63.05422031,  52.75755255,  53.45724673,\n",
       "        65.00214882, 210.17029067,  90.75013459, 224.66800153,\n",
       "       215.95462401, 221.20787547,  46.43715833, 125.80273294,\n",
       "       113.94941738,  74.21321904, 230.08526278,  77.83658663,\n",
       "        92.74122638,  74.06248742,  46.2807114 ,  63.99224017,\n",
       "        84.67384014,  49.84296484,  46.62145865, 155.93728307,\n",
       "        54.02130428,  96.89781643,  51.69318432])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predicted=regressor.predict(xtest)\n",
    "predicted"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "7cf48cf0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        Open    High     Low    Volume  year  month  day\n",
      "464    63.25   63.41   62.75  45827013  2017      2    2\n",
      "53     45.73   46.07   45.36  28704061  2015      6   17\n",
      "34     47.39   47.93   47.27  25047919  2015      5   20\n",
      "946   100.10  100.19   97.20  42578410  2019      1    3\n",
      "9      41.76   42.46   41.68  27343581  2015      4   15\n",
      "...      ...     ...     ...       ...   ...    ...  ...\n",
      "44     46.79   47.16   46.20  27745512  2015      6    4\n",
      "1243  158.16  161.03  152.58  65354385  2020      3   10\n",
      "245    53.61   54.25   53.46  23124143  2016      3   22\n",
      "789    96.01   96.93   96.01  17865840  2018      5   18\n",
      "300    52.00   52.00   51.49  20305664  2016      6    9\n",
      "\n",
      "[499 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "print(xtest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "41ad099a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(499,)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predicted.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0d2342a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Close</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>63.046107</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45.679574</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47.691109</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97.994589</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42.225496</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46.621459</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>155.937283</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54.021304</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96.897816</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51.693184</th>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>499 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Close\n",
       "63.046107     NaN\n",
       "45.679574     NaN\n",
       "47.691109     NaN\n",
       "97.994589     NaN\n",
       "42.225496     NaN\n",
       "...           ...\n",
       "46.621459     NaN\n",
       "155.937283    NaN\n",
       "54.021304     NaN\n",
       "96.897816     NaN\n",
       "51.693184     NaN\n",
       "\n",
       "[499 rows x 1 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dframe=pd.DataFrame(ytest,predicted)\n",
    "dframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a1920574",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual Price</th>\n",
       "      <th>Predicted Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>464</th>\n",
       "      <td>63.17</td>\n",
       "      <td>63.046107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>45.97</td>\n",
       "      <td>45.679574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>47.58</td>\n",
       "      <td>47.691109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>946</th>\n",
       "      <td>97.40</td>\n",
       "      <td>97.994589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>42.26</td>\n",
       "      <td>42.225496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>46.36</td>\n",
       "      <td>46.621459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1243</th>\n",
       "      <td>160.92</td>\n",
       "      <td>155.937283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>54.07</td>\n",
       "      <td>54.021304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>789</th>\n",
       "      <td>96.36</td>\n",
       "      <td>96.897816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>300</th>\n",
       "      <td>51.62</td>\n",
       "      <td>51.693184</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>499 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Actual Price  Predicted Price\n",
       "464          63.17        63.046107\n",
       "53           45.97        45.679574\n",
       "34           47.58        47.691109\n",
       "946          97.40        97.994589\n",
       "9            42.26        42.225496\n",
       "...            ...              ...\n",
       "44           46.36        46.621459\n",
       "1243        160.92       155.937283\n",
       "245          54.07        54.021304\n",
       "789          96.36        96.897816\n",
       "300          51.62        51.693184\n",
       "\n",
       "[499 rows x 2 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfr=pd.DataFrame({'Actual Price':ytest,'Predicted Price':predicted})\n",
    "dfr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "51787c85",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Actual Price</th>\n",
       "      <th>Predicted Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>464</th>\n",
       "      <td>63.17</td>\n",
       "      <td>63.046107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>45.97</td>\n",
       "      <td>45.679574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>47.58</td>\n",
       "      <td>47.691109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>946</th>\n",
       "      <td>97.40</td>\n",
       "      <td>97.994589</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>42.26</td>\n",
       "      <td>42.225496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1331</th>\n",
       "      <td>208.04</td>\n",
       "      <td>207.381206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>961</th>\n",
       "      <td>107.17</td>\n",
       "      <td>107.353981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>303</th>\n",
       "      <td>49.83</td>\n",
       "      <td>49.811823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1003</th>\n",
       "      <td>116.77</td>\n",
       "      <td>116.383283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>364</th>\n",
       "      <td>56.21</td>\n",
       "      <td>56.957754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>44.30</td>\n",
       "      <td>43.626391</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>309</th>\n",
       "      <td>50.99</td>\n",
       "      <td>51.314044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>465</th>\n",
       "      <td>63.68</td>\n",
       "      <td>63.430926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>494</th>\n",
       "      <td>64.87</td>\n",
       "      <td>65.009253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>944</th>\n",
       "      <td>101.57</td>\n",
       "      <td>101.591120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>308</th>\n",
       "      <td>51.19</td>\n",
       "      <td>51.152053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>512</th>\n",
       "      <td>65.23</td>\n",
       "      <td>65.392607</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871</th>\n",
       "      <td>113.37</td>\n",
       "      <td>113.083121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>50.79</td>\n",
       "      <td>50.252754</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211</th>\n",
       "      <td>53.00</td>\n",
       "      <td>52.981932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1127</th>\n",
       "      <td>139.14</td>\n",
       "      <td>139.102709</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>479</th>\n",
       "      <td>64.62</td>\n",
       "      <td>64.515046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1333</th>\n",
       "      <td>202.88</td>\n",
       "      <td>202.546027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295</th>\n",
       "      <td>52.48</td>\n",
       "      <td>52.185012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>64.41</td>\n",
       "      <td>64.389156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1064</th>\n",
       "      <td>137.78</td>\n",
       "      <td>138.257195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1372</th>\n",
       "      <td>204.03</td>\n",
       "      <td>203.620193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>581</th>\n",
       "      <td>73.79</td>\n",
       "      <td>73.916032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1137</th>\n",
       "      <td>137.12</td>\n",
       "      <td>138.110490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1002</th>\n",
       "      <td>117.91</td>\n",
       "      <td>117.408095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539</th>\n",
       "      <td>68.45</td>\n",
       "      <td>68.178350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>477</th>\n",
       "      <td>64.36</td>\n",
       "      <td>64.255967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>434</th>\n",
       "      <td>63.62</td>\n",
       "      <td>63.444551</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>376</th>\n",
       "      <td>57.95</td>\n",
       "      <td>57.648085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1389</th>\n",
       "      <td>205.91</td>\n",
       "      <td>206.814873</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>536</th>\n",
       "      <td>67.48</td>\n",
       "      <td>67.964876</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>353</th>\n",
       "      <td>57.95</td>\n",
       "      <td>57.999300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>724</th>\n",
       "      <td>90.81</td>\n",
       "      <td>90.469342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>992</th>\n",
       "      <td>113.62</td>\n",
       "      <td>113.792823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1338</th>\n",
       "      <td>201.30</td>\n",
       "      <td>200.041702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>302</th>\n",
       "      <td>50.14</td>\n",
       "      <td>49.936740</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>432</th>\n",
       "      <td>62.58</td>\n",
       "      <td>62.817497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1476</th>\n",
       "      <td>242.82</td>\n",
       "      <td>242.539497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>268</th>\n",
       "      <td>52.11</td>\n",
       "      <td>51.936193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>720</th>\n",
       "      <td>85.01</td>\n",
       "      <td>85.886154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>342</th>\n",
       "      <td>58.20</td>\n",
       "      <td>58.427119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1450</th>\n",
       "      <td>217.69</td>\n",
       "      <td>216.782429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>46.72</td>\n",
       "      <td>46.599168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>648</th>\n",
       "      <td>78.63</td>\n",
       "      <td>78.650329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>810</th>\n",
       "      <td>100.86</td>\n",
       "      <td>100.712537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1164</th>\n",
       "      <td>147.31</td>\n",
       "      <td>147.159155</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1218</th>\n",
       "      <td>174.38</td>\n",
       "      <td>173.755235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>278</th>\n",
       "      <td>50.07</td>\n",
       "      <td>50.279470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>674</th>\n",
       "      <td>84.26</td>\n",
       "      <td>84.402764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487</th>\n",
       "      <td>64.99</td>\n",
       "      <td>65.032808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>535</th>\n",
       "      <td>69.41</td>\n",
       "      <td>69.198537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>916</th>\n",
       "      <td>108.29</td>\n",
       "      <td>108.402669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>940</th>\n",
       "      <td>94.13</td>\n",
       "      <td>95.019546</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>632</th>\n",
       "      <td>74.26</td>\n",
       "      <td>74.667552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>922</th>\n",
       "      <td>107.14</td>\n",
       "      <td>106.492614</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Actual Price  Predicted Price\n",
       "464          63.17        63.046107\n",
       "53           45.97        45.679574\n",
       "34           47.58        47.691109\n",
       "946          97.40        97.994589\n",
       "9            42.26        42.225496\n",
       "1331        208.04       207.381206\n",
       "961         107.17       107.353981\n",
       "303          49.83        49.811823\n",
       "1003        116.77       116.383283\n",
       "364          56.21        56.957754\n",
       "66           44.30        43.626391\n",
       "309          50.99        51.314044\n",
       "465          63.68        63.430926\n",
       "494          64.87        65.009253\n",
       "944         101.57       101.591120\n",
       "308          51.19        51.152053\n",
       "512          65.23        65.392607\n",
       "871         113.37       113.083121\n",
       "202          50.79        50.252754\n",
       "211          53.00        52.981932\n",
       "1127        139.14       139.102709\n",
       "479          64.62        64.515046\n",
       "1333        202.88       202.546027\n",
       "295          52.48        52.185012\n",
       "491          64.41        64.389156\n",
       "1064        137.78       138.257195\n",
       "1372        204.03       203.620193\n",
       "581          73.79        73.916032\n",
       "1137        137.12       138.110490\n",
       "1002        117.91       117.408095\n",
       "539          68.45        68.178350\n",
       "477          64.36        64.255967\n",
       "434          63.62        63.444551\n",
       "376          57.95        57.648085\n",
       "1389        205.91       206.814873\n",
       "536          67.48        67.964876\n",
       "353          57.95        57.999300\n",
       "724          90.81        90.469342\n",
       "992         113.62       113.792823\n",
       "1338        201.30       200.041702\n",
       "302          50.14        49.936740\n",
       "432          62.58        62.817497\n",
       "1476        242.82       242.539497\n",
       "268          52.11        51.936193\n",
       "720          85.01        85.886154\n",
       "342          58.20        58.427119\n",
       "1450        217.69       216.782429\n",
       "54           46.72        46.599168\n",
       "648          78.63        78.650329\n",
       "810         100.86       100.712537\n",
       "1164        147.31       147.159155\n",
       "1218        174.38       173.755235\n",
       "278          50.07        50.279470\n",
       "674          84.26        84.402764\n",
       "487          64.99        65.032808\n",
       "535          69.41        69.198537\n",
       "916         108.29       108.402669\n",
       "940          94.13        95.019546\n",
       "632          74.26        74.667552\n",
       "922         107.14       106.492614"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dfr.head(60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "21af3f34",
   "metadata": {},
   "outputs": [],
   "source": [
    "print('Mean Absolute Error:,metrics.mean_absolute_error_test'(ytest))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
